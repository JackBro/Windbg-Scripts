$$ A script to descramble memory contents
$$
$$ Written by Elias Bachaalany for "The Practical Reverse Engineering" book
$$
$$ Input     : Source Dest Size
$$ Uses      : t0, t1, t2, t3, t4
$$ Returns   : Dest

.catch
{
	.if ${/d:$arg1} == 0 or ${/d:$arg2} == 0 or ${/d:$arg3} == 0
	{
		.printf "Usage: descramble.wds SourceAddr DestAddr Size\n";
		.leave;
	}

	$$ Take the Source
	r $t0 = ${$arg1};

	$$ Take the Destination
	r $t1 = ${$arg2};

	$$ Take the Size
	r $t2 = ${$arg3};

	.for (r $t3=0; @$t3 < @$t2; r $t3 = @$t3 + 1, $t0 = @$t0 + 1, $t1 = @$t1 + 1)
	{
		r $t4 = @@c++((*(unsigned char *)@$t0) ^ (235 + (@$t3 & 1)));
		eb @$t1 @$t4;
	}

	$$ Display the descrambled result
	db ${$arg2} L ${$arg3};
}
